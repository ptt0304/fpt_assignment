apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cassandra.fullname" . }}
  labels:
    {{- include "cassandra.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "cassandra.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cassandra.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cassandra.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: cassandra
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 7000
              name: intra-node
            - containerPort: 7001
              name: tls-intra-node
            - containerPort: 7199
              name: jmx
            - containerPort: 9042
              name: cql
          env:
            - name: CASSANDRA_SEEDS
              value: "{{ include "cassandra.fullname" . }}-0.{{ include "cassandra.fullname" . }}"
            - name: CASSANDRA_CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "cassandra.fullname" . }}-config
                  key: cluster_name
            - name: CASSANDRA_NUM_TOKENS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "cassandra.fullname" . }}-config
                  key: num_tokens
            - name: CASSANDRA_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "cassandra.fullname" . }}-secret
                  key: username
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "cassandra.fullname" . }}-secret
                  key: password
          volumeMounts:
            - name: data
              mountPath: /var/lib/cassandra
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
  {{- if .Values.storage.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.storage.className }}
        storageClassName: {{ .Values.storage.className }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.storage.size | quote }}
  {{- else }}
  volumes:
    - name: data
      emptyDir: {}
  {{- end }}
